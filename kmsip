# Get current path
$currentPath = (Get-Location).Path

# Input and output file paths
$inputFile = Join-Path -Path $currentPath -ChildPath "domain_list.txt"
$outputFile = Join-Path -Path $currentPath -ChildPath "outip_list.txt" # cloudflare_import.txt

# Prompt
Write-Host "`n===> Input file: $inputFile"
Write-Host "===> Output file: $outputFile"
Write-Host "===> Please confirm the paths and press any key to continue..."
[System.Console]::ReadKey() > $null

# Check if input file exists
if (-not (Test-Path -Path $inputFile)) {
    Write-Host "===> Error: Input file not found: $inputFile"
    return
}

# Create output file if it doesn't exist
if (-not (Test-Path -Path $outputFile)) {
    Write-Host "===> Output file not found. Creating new file: $outputFile"
    New-Item -ItemType File -Path $outputFile -Force | Out-Null
}

# Clear output file content
Clear-Content -Path $outputFile -ErrorAction SilentlyContinue

# Read domain list
$domains = Get-Content -Path $inputFile

# Process each domain
foreach ($domain in $domains) {
    try {
        # Resolve IPv4 addresses only
        $ipAddresses = [System.Net.Dns]::GetHostAddresses($domain) | Where-Object { $_.AddressFamily -eq 'InterNetwork' }
    } catch {
        Write-Host "===> DNS resolution failed: $domain"
        continue
    }

    foreach ($ip in $ipAddresses) {
        $ipAddress = $ip.ToString()
        $tcpConnection = New-Object System.Net.Sockets.TcpClient
        try {
            # Attempt to connect to port 1688
            $tcpConnection.Connect($ip, 1688)
            if ($tcpConnection.Connected) {
                # Add-Content -Path $outputFile -Value "kms.jihuowin.com.	1	IN	A	$ipAddress"
                Add-Content -Path $outputFile -Value "$ipAddress"
                Write-Host "===> Success: $ipAddress :1688"
            }
        } catch {
            Write-Host "===> Unreachable: $ipAddress :1688"
        } finally {
            $tcpConnection.Close()
        }
    }
}

Write-Host "`n===> Completed."
Write-Host "===> Output saved to: $outputFile"
